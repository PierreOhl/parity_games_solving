timeout: 100
is_timeout: False
solution: [0, 1, 6, 8, 10, 11, 14, 16, 17, 18, 22, 26, 28, 29, 30, 32, 36, 37, 39, 42, 43, 44, 45, 47, 49, 50, 51, 53, 56, 57, 58, 59, 63, 64, 65, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 86, 87, 89, 90, 94, 97, 98, 99, 101, 103, 104, 105, 110, 111, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 146, 148, 149, 151, 153, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 171, 173, 175, 176, 179, 180, 181, 182, 184, 186, 188, 191, 193, 195, 196, 197, 199, 200, 201, 205, 206, 207, 208, 212, 216, 217, 219, 220, 222, 224, 225, 227, 228, 231, 234, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 251, 252, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 270, 272, 275, 276, 277, 279, 280, 281, 289, 290, 295, 296, 297, 298, 299, 335, 338, 342, 346, 351, 356, 369, 376, 387, 402, 425, 454, 455, 463, 473, 478, 480, 491, 506, 529, 541, 543, 547, 549, 569, 571]
infos: {'algorithm': 'Asymmetric snare update for Adam', 'snare updates': 14, 'spent': 5.35369348526001, 'equivalent updates': 755, 'runtime': 7.438988924026489}