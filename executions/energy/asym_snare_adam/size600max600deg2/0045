timeout: 100
is_timeout: False
solution: [0, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 17, 20, 23, 25, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 51, 58, 60, 61, 63, 65, 68, 69, 71, 73, 74, 77, 84, 85, 89, 91, 92, 96, 98, 99, 101, 102, 107, 108, 109, 111, 113, 114, 118, 123, 124, 125, 127, 128, 131, 132, 135, 137, 138, 139, 141, 145, 146, 148, 149, 150, 153, 157, 160, 161, 162, 163, 166, 169, 170, 172, 174, 176, 180, 182, 185, 187, 189, 198, 203, 205, 208, 209, 210, 211, 212, 213, 217, 218, 219, 222, 223, 227, 229, 231, 236, 237, 238, 242, 244, 247, 248, 250, 251, 252, 253, 255, 258, 261, 263, 264, 266, 272, 274, 277, 288, 292, 293, 294, 307, 338, 342, 344, 393, 400, 418, 426, 462, 477, 480, 490, 515, 530, 531, 534, 570, 577, 579, 590]
infos: {'algorithm': 'Asymmetric snare update for Adam', 'snare updates': 12, 'spent': 5.407586097717285, 'equivalent updates': 957, 'runtime': 7.545593500137329}