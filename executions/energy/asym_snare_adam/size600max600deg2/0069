timeout: 100
is_timeout: False
solution: [0, 1, 4, 6, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 22, 24, 26, 30, 37, 40, 43, 45, 46, 47, 48, 50, 52, 55, 56, 57, 58, 60, 62, 64, 65, 69, 73, 74, 76, 77, 79, 81, 86, 87, 89, 90, 92, 94, 95, 97, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 126, 127, 132, 135, 137, 140, 141, 142, 145, 146, 147, 148, 152, 153, 157, 158, 159, 160, 161, 162, 169, 173, 174, 175, 176, 178, 179, 181, 184, 186, 191, 192, 193, 194, 196, 199, 202, 204, 207, 208, 211, 212, 214, 215, 216, 219, 223, 224, 227, 229, 236, 237, 238, 239, 241, 243, 245, 251, 252, 255, 256, 257, 259, 260, 263, 266, 267, 268, 269, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 286, 287, 288, 290, 291, 294, 299, 302, 308, 309, 315, 345, 358, 376, 425, 427, 428, 429, 432, 444, 447, 452, 453, 461, 465, 502, 516, 528, 536, 539, 540, 541, 563, 583]
infos: {'algorithm': 'Asymmetric snare update for Adam', 'snare updates': 21, 'spent': 8.897717237472534, 'equivalent updates': 1145, 'runtime': 12.070152044296265}