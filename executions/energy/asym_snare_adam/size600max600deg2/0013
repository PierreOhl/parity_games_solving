timeout: 100
is_timeout: False
solution: [0, 1, 3, 4, 5, 6, 9, 12, 13, 14, 17, 18, 19, 20, 21, 23, 24, 26, 30, 31, 34, 35, 36, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 57, 60, 63, 64, 66, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 103, 105, 107, 109, 110, 111, 112, 115, 117, 118, 119, 123, 124, 126, 129, 131, 133, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 154, 157, 158, 161, 162, 166, 167, 168, 169, 171, 174, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 256, 257, 258, 260, 263, 264, 265, 266, 269, 270, 274, 275, 278, 280, 281, 282, 284, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 305, 311, 314, 318, 335, 337, 345, 346, 354, 355, 356, 360, 367, 375, 384, 386, 394, 399, 402, 403, 406, 407, 412, 420, 427, 430, 436, 443, 450, 457, 464, 467, 469, 492, 496, 510, 515, 520, 540, 545, 550, 561, 562, 566, 569, 575, 577, 587, 588, 589, 590, 594]
infos: {'algorithm': 'Asymmetric snare update for Adam', 'snare updates': 12, 'spent': 4.697049379348755, 'equivalent updates': 810, 'runtime': 6.667947769165039}